Title: need help condensing two nearly identical functions appreciate insight advice
Karma: 17
Date: 1368934241.0
two methods vbnet near identical purpose code figure probably call one promopartprice promopartsadjust see right away love suggestions insight anyone offer functions used place anyway love much code repeating loops confusing know functionally promopartsadjust loop dataset argument public function promopartpricebyval part string byval oldprice decimal string dim promocode string sessionpromo dim promodata datatable megetpromodatapromocode dim newprice decimal ' promo code valid promodatarowscount dim promo datarow promodatarows dim percentoff decimal promopercent dim allowedparts string promoparttostring dim allowedprods string promowebcattostring dim allparts boolean true dim partarray array mepromobuildpartsarraypromodata allowedparts allowedprods allparts false end ' percent percentoff dim percentoffdec decimal mepromodecimalpercentoff allparts m integer partarraylength ' compare part array parts agains cart part part partarraymtostring newprice oldprice percentoffdec end next else part d part d part d newprice oldprice percentoffdec end end end end return newprice end function public function promopartsadjustbyval parts dataset dataset dim promocode string sessionpromo dim promodata datatable megetpromodatapromocode dim newprice decimal ' promo code valid promodatarowscount dim promo datarow promodatarows dim percentoff decimal promopercent dim allowedparts string promoparttostring dim allowedprods string promowebcattostring dim allparts boolean true dim partarray array mepromobuildpartsarraypromodata allowedparts allowedprods allparts false end ' percent percentoff dim percentdec decimal mepromodecimalpercentoff dim partdt datatable partstables ' apply code prices cart loop loop n integer partdtrowscount ' loop cart parts dim part string partdtrowsnitemparttostring dim oldprice decimal partdtrowsnitemprice allparts m integer partarraylength part partarraymtostring ' match get price df update promocode partdtrowsnitemprice oldprice percentdec end next else ' parts except running charge parts part d part d part d partdtrowsnitemprice oldprice percentdec end end next partstablesclear partstablesaddpartdt end end return parts end function edit totally forgot include language title sorry really forget thinking may deterred people many people choose vbnet understandably past dev chose picking pieces edit figured needed able reduce functions time updated version functions able remove placed formatting problems reddit seems prefixed lines spaces happening sorry readability issues public function promopriceadjustbyval partnumber string byval oldprice decimal string dim promocode string sessionpromo dim promodata datatable megetpromodatapromocode dim newprice decimal ' promo code valid promodatarowscount dim promo datarow promodatarows dim percentoff decimal promopercent dim allowedparts string promoparttostring dim allowedprods string promowebcattostring dim prodarray array nothing dim partarray array nothing dim allparts boolean true allowedparts allowedprods allparts false end allowedprods integer prodarraylength dim proddata dataset megetproductpartsprodarrayi true proddatatablescount x integer proddatatablesrowscount ' already specified parts allow suffix comma add new ones allowedparts allowedparts end ' concat parts specified allowed parts bigass string allowedparts proddatatablesrowsxitemparttostring next end next end ' work part level allowedparts contain allowed pieces partarray splitallowedparts ' percent promotion percentoff 'dim percentoffdec decimal mepromodecimalpercentoff dim percentoffdec decimal percentoff allparts m integer partarraylength ' compare part array parts agains cart part partnumber partarraymtostring newprice oldprice percentoffdec end next else partnumber d partnumber d partnumber d newprice oldprice percentoffdec end end end end return newprice end function ' apply promo percent savings item shopping cart public function promopartsadjustbyval parts dataset dataset dim newprice decimal dim partdt datatable partstables ' loop cart parts update price row discounted price integer partdtrowscount dim part string partdtrowsiitemparttostring dim oldprice decimal partdtrowsiitemprice mepromopriceadjustpart oldprice next ' empty old cart table replace new discounted one partstablesclear partstablesaddpartdt return parts end function

==============================

